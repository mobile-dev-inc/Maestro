#!/usr/bin/env sh
set -eu

# Runs all tests in the workspaces directory.

command -v maestro >/dev/null 2>&1 || { echo "maestro is required" && exit 1; }

[ "$(basename "$PWD")" = "e2e" ] || { echo "must be run from e2e directory" && exit 1; }

ALL_PASS=true

_h1() {
	printf "=>\n=> $1\n=>\n"
}

_h2() {
	printf "==> [$1] $2\n"
}

_h3() {
	printf "==> [$1] [$2] => $3\n"
}

platform="${1:-}"
if [ "$platform" = "android" ]; then
	exclude_tags="ios,ai"
elif [ "$platform" = "ios" ]; then
	exclude_tags="android,ai"
else
	echo "usage: $0 <android|ios>"
	exit 1 
fi

mkfifo pipe
trap 'rm -f pipe' EXIT

# Run passing tests
for workspace_dir in ./workspaces/*; do
	WORKSPACE_PASS=true
	app_name="$(basename "$workspace_dir")"
	_h1 "run tests for app \"$app_name\" on platform \"$platform\""

	###
	### Run passing tests
	###
	_h2 "$app_name" "run passing tests"

	while IFS= read -r line; do
	    _h3 "$app_name" "passing" "$line"
	done < pipe &

	maestro --verbose --platform "$platform" test --include-tags passing --exclude-tags "$exclude_tags" "$workspace_dir" 1>pipe 2>&1 || WORKSPACE_PASS=false

	if [ "$WORKSPACE_PASS" = "false" ]; then
        _h2 "$app_name" "FAIL! Expected all pass, but at least some failed instead"
		ALL_PASS=false
	fi

	###
	### Run failing tests
	###
	# edge case: the wikipedia workspace has no failing flows
	if [ "$(basename "$workspace_dir")" = "wikipedia" ]; then
		continue
	fi

	WORKSPACE_PASS=true # Reset for failing flows
	_h2 "$app_name" "run failing tests"

	while IFS= read -r line; do
	    _h3 "$app_name" "failing" "$line"
	done < pipe &

	maestro --verbose --platform "$platform" test --include-tags failing --exclude-tags "$exclude_tags" "$workspace_dir" 1>pipe 2>&1 && WORKSPACE_PASS=false

	if [ "$WORKSPACE_PASS" = "false" ]; then
		_h2 "$app_name" "FAIL! Expected all to fail, but at least some passed instead"
		ALL_PASS=false
    fi
done

if [ "$ALL_PASS" = "false" ]; then
	_h1 "FAILURE: some tests failed!"
	exit 1
else
	_h1 "SUCCESS: all tests passed!"
fi
